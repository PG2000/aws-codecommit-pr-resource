#!/bin/bash
# vim: set ft=sh

set -e -u -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

TMPDIR=${TMPDIR:-/tmp}

source "$(dirname "$0")/common.sh"

destination="$1"

if [ -z "${destination}" ]; then
    echo "Usage: $0 <path/to/destination>" >&2
    exit 1
fi

payload="$(mktemp "${TMPDIR}/gitlab-merge-request-resource.XXXXXX")"

cat > "${payload}" <&0

jq -r < "${payload}"

uri="$(jq -r '.source.uri // ""' < "${payload}")"
repo_name=$(echo $uri | sed 's/codecommit::eu-central-1:\/\///g')
version="$(jq -r '.version // ""' < "${payload}")"
commit_sha="$(echo "${version}" | jq -r '.sha // ""')"
pr="$(echo "${version}" | jq -r '.pr // ""')"


cd "${destination}"
cd "${repo_name}"

before_commit_id=$(git rev-parse "${commit_sha}"^)

aws codecommit post-comment-for-pull-request \
    --pull-request-id "${pr}" \
    --repository-name "${repo_name}"  \
    --after-commit-id "${commit_sha}" \
    --before-commit-id "${before_commit_id}" \
    --content "test pr comment from concourse"

jq -n "{
    version: ${version},
    metadata: $(git_metadata)
}" >&3

