#!/bin/bash
# vim: set ft=sh
export AWS_REGION=eu-central-1
set -e -u -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

TMPDIR=${TMPDIR:-/tmp/}

payload="$(mktemp "${TMPDIR}code_commmit-merge-request-resource.XXXXXX")"

cat > "${payload}" <&0

cat $payload

uri="$(jq -r '.source.uri // ""' < "${payload}")"
repo_name=$(echo $uri | sed 's/codecommit::eu-central-1:\/\///g')
version_sha="$(jq -r '.version.sha // ""' < "${payload}")"

open_pull_requests=$(aws codecommit list-pull-requests --repository-name ${repo_name} --pull-request-status OPEN --region eu-central-1)
num_pull_requests="$(echo "${open_pull_requests}" | jq '.pullRequestIds | length')"

new_versions=''

for i in $(seq 0 $((num_pull_requests - 1))); do
    mr="$(echo "${open_pull_requests}" | jq -r '.pullRequestIds['"$i"']')"
	mr_details=$(aws codecommit get-pull-request --pull-request-id ${mr} --region eu-central-1)
    mr_sha="$(echo "${mr_details}" | jq -r '.pullRequest.pullRequestTargets[0].sourceCommit')"
    mr_updated_at="$(echo "${mr_details}" | jq -r '.pullRequest.lastActivityDate')"
    mr_updated_at=$(date -d "@$mr_updated_at" "+%s")
    mr_creation_date="$(echo "${mr_details}" | jq -r '.pullRequest.creationDate')"
    mr_creation_date=$(date -d "@$mr_creation_date" "+%s")
    if [ "${mr_sha}" != "null" ]; then
        if [ ${mr_updated_at} -gt ${mr_creation_date} ] || [ -z "${version_sha}" ]; then
            new_versions="${new_versions},{\"sha\":\"${mr_sha}\"}"
        fi
    fi
done

new_versions="${new_versions#','}"
new_versions="[${new_versions}]"

if [ "${new_versions}" == '[]' ] && ! [ -z "${version_sha}" ]; then
    new_versions="[{\"sha\":\"${version_sha}\"}]"
fi

jq -n "${new_versions}" >&3
